pipeline {
    agent any

    stages {

        stage('Docker version rebuild') {
            agent {
                label 'ubuntu'
            }
            steps {
                sh "echo $USER"
                sh 'sudo chmod 777 /var/run/docker.sock'
                sh 'docker version'
            }
        }

        stage('Docker version master') {
            agent {
                label 'master'
            }
            steps {
                sh "echo $USER"
                sh 'docker version'
            }
        }

        stage('Delete workspace before build starts') {
            steps {
                echo 'Deleting workspace'
                deleteDir()
            }
        }

        stage('Build docker image') {
            steps {
                sh 'docker-compose build .'
            }
        }

        stage('Push docker image to DockerHub') {
            steps{
                withDockerRegistry(credentialsId: 'docker-hub-cred', url: 'https://index.docker.io/v1/') {
                    sh '''
                        docker push danwhite123/nginx-image:latest danwhite123/apache-image:latest
                    '''
                }
            }
        }
        stage('Delete docker image locally') {
            steps{
                sh 'docker rmi danwhite123/nginx-image:latest danwhite123/apache-image:latest'
            }
        }



//         stage('Run Ansible Playbook') {
//             agent {
//                 label 'master'
//             }
//             steps {
//                 ansiblePlaybook(
//                     playbook: 'ansible/installer_of_docker_and_jdk.yml',
//                     inventory: 'ansible/hosts.txt',
//                     hostKeyChecking: 'false'
//                 )
//             }
//         }
    }
}